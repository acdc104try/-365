/// package.json { "name": "kibuntyou365", "version": "1.0.0", "private": true, "scripts": { "dev": "vite", "build": "vite build", "preview": "vite preview" }, "dependencies": { "react": "^18.2.0", "react-dom": "^18.2.0" }, "devDependencies": { "vite": "^5.0.0", "@vitejs/plugin-react": "^4.0.0" } }

/// vite.config.js import { defineConfig } from 'vite' import react from '@vitejs/plugin-react'

export default defineConfig({ plugins: [react()], })

/// index.html

<!DOCTYPE html><html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>気分帳365</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>/// /src/main.jsx import React from 'react' import ReactDOM from 'react-dom/client' import App from './App'

ReactDOM.createRoot(document.getElementById('root')).render( <React.StrictMode> <App /> </React.StrictMode> )

/// /src/App.jsx import { useState } from 'react'

function App() { const [good, setGood] = useState(50) const [bad, setBad] = useState(50) const [note, setNote] = useState('') const [log, setLog] = useState([]) const [comment, setComment] = useState('')

const handleCheck = () => { let result = '' if (good >= 70 && bad <= 30) { result = 'とても良いバランスですね。今の気持ちを大切に✨' } else if (good > bad) { result = '少し元気な様子ですね。何が良かったのか考えてみましょう😊' } else if (bad > good) { result = '気になることが多いかも。ひとつずつ整理してみましょう☁️' } else { result = '心が揺れているようですね。自分の気持ちをゆっくり観察してみてください🌿' }

setComment(result)
setLog([
  ...log,
  {
    good,
    bad,
    note,
    result,
    time: new Date().toLocaleString(),
  },
])

}

return ( <div style={{ padding: 20, fontFamily: 'sans-serif', maxWidth: 500, margin: 'auto' }}> <h1>気分帳365 🌤️</h1> <label> 良い気分（0〜100）: <input type="number" value={good} onChange={(e) => setGood(Number(e.target.value))} min={0} max={100} /> </label> <br /> <label> 悪い気分（0〜100）: <input type="number" value={bad} onChange={(e) => setBad(Number(e.target.value))} min={0} max={100} /> </label> <br /> <label> メモ： <input type="text" value={note} onChange={(e) => setNote(e.target.value)} placeholder="例：アニメ観て泣いた..." style={{ width: '100%' }} /> </label> <br /> <button onClick={handleCheck}>セラピストGPTに聞いてみる</button>

{comment && (
    <>
      <h3>AIコメント：</h3>
      <p>{comment}</p>
    </>
  )}

  <h3>記録ログ：</h3>
  <ul>
    {log.map((entry, idx) => (
      <li key={idx}>
        [{entry.time}] 良い: {entry.good} / 悪い: {entry.bad}｜「{entry.note}」→ {entry.result}
      </li>
    ))}
  </ul>
</div>

) }

export default App

